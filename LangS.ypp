%{

#include <string>
#include <fstream>
#include <iostream>

#include "ParseTree.h"

#define YYSTYPE Node* 
using namespace std;
using namespace ParseTree;

std::ofstream out;
void yyerror(std::string s);
int yylex (void);

Program *theProg;

%}

%token COMMENT
%token Ident
%token STRING
%token BinOP
%token Print
%token Exit

%left BinOP

%%

Prog:	Stm ';' Prog	{ theProg->add((Statement *)$1); }
	| Stm ';'	{ theProg->add((Statement *)$1); }

Stm:	Exit			{ $$ = new ExitStatement();}
	| Ident '=' Value	{ $$ = new AssingmentStatement((Identifier*)$1,(Value*)$3); }
	| Value			{ }
	| Print Value 		{ $$ = new PrintStatement((Value*)$2); }

Value:	STRING 			{ $$ = $1; }
	| Ident			{ $$ = $1; }
	| Items			{ $$ = $1; }
	| Value BinOP Value	{ $$ = new BinOpValue(((Identifier*)$2)->getName(),(Value*)$1,(Value*)$3); }

Items: '[' List ']'		{ $$ = $1; }

List: List ',' Value	{ ((ListValue *)$1)->add((Value*)$3); $$ = $1; }
	| Value		{ $$ = new ListValue((Value*)$1); }

%%

using namespace std;

void yyerror(std::string s) {
    cerr<<s<<endl;
}


